/* Generated by the protocol buffer compiler.  DO NOT EDIT! */

#ifndef PROTOBUF_C_measured_2ddata_2eproto__INCLUDED
#define PROTOBUF_C_measured_2ddata_2eproto__INCLUDED

#include <google/protobuf-c/protobuf-c.h>

PROTOBUF_C_BEGIN_DECLS


typedef struct _MeasuredData MeasuredData;
typedef struct _DataSet DataSet;
typedef struct _DataPoints DataPoints;


/* --- enums --- */


/* --- messages --- */

struct  _MeasuredData
{
  ProtobufCMessage base;
  double samplingrate;
  uint32_t channels;
  protobuf_c_boolean hasexternaldata;
  size_t n_inlinedata;
  DataSet **inlinedata;
};
#define MEASURED_DATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&measured_data__descriptor) \
    , 0, 0, 0, 0,NULL }


struct  _DataSet
{
  ProtobufCMessage base;
  int64_t timesecs;
  int64_t timenanosecs;
  size_t n_channeldata;
  DataPoints **channeldata;
};
#define DATA_SET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&data_set__descriptor) \
    , 0, 0, 0,NULL }


struct  _DataPoints
{
  ProtobufCMessage base;
  size_t n_datapoints;
  double *datapoints;
  protobuf_c_boolean has_channel;
  uint32_t channel;
};
#define DATA_POINTS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&data_points__descriptor) \
    , 0,NULL, 0,0 }


/* MeasuredData methods */
void   measured_data__init
                     (MeasuredData         *message);
size_t measured_data__get_packed_size
                     (const MeasuredData   *message);
size_t measured_data__pack
                     (const MeasuredData   *message,
                      uint8_t             *out);
size_t measured_data__pack_to_buffer
                     (const MeasuredData   *message,
                      ProtobufCBuffer     *buffer);
MeasuredData *
       measured_data__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   measured_data__free_unpacked
                     (MeasuredData *message,
                      ProtobufCAllocator *allocator);
/* DataSet methods */
void   data_set__init
                     (DataSet         *message);
size_t data_set__get_packed_size
                     (const DataSet   *message);
size_t data_set__pack
                     (const DataSet   *message,
                      uint8_t             *out);
size_t data_set__pack_to_buffer
                     (const DataSet   *message,
                      ProtobufCBuffer     *buffer);
DataSet *
       data_set__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   data_set__free_unpacked
                     (DataSet *message,
                      ProtobufCAllocator *allocator);
/* DataPoints methods */
void   data_points__init
                     (DataPoints         *message);
size_t data_points__get_packed_size
                     (const DataPoints   *message);
size_t data_points__pack
                     (const DataPoints   *message,
                      uint8_t             *out);
size_t data_points__pack_to_buffer
                     (const DataPoints   *message,
                      ProtobufCBuffer     *buffer);
DataPoints *
       data_points__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   data_points__free_unpacked
                     (DataPoints *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*MeasuredData_Closure)
                 (const MeasuredData *message,
                  void *closure_data);
typedef void (*DataSet_Closure)
                 (const DataSet *message,
                  void *closure_data);
typedef void (*DataPoints_Closure)
                 (const DataPoints *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor measured_data__descriptor;
extern const ProtobufCMessageDescriptor data_set__descriptor;
extern const ProtobufCMessageDescriptor data_points__descriptor;

PROTOBUF_C_END_DECLS


#endif  /* PROTOBUF_measured_2ddata_2eproto__INCLUDED */
